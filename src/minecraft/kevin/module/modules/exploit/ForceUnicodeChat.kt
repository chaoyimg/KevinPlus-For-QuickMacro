/*
 * This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package kevin.module.modules.exploit

import kevin.event.EventTarget
import kevin.event.PacketEvent
import kevin.module.ListValue
import kevin.module.Module
import kevin.module.ModuleCategory
import kevin.module.TextValue
import net.minecraft.network.play.client.C01PacketChatMessage

class ForceUnicodeChat : Module("ForceUnicodeChat", "Allows you to send unicode messages in chat.", category = ModuleCategory.EXPLOIT) {
    private val mode = ListValue("Mode", arrayOf("All","Prefix","Infix"),"Prefix")
    private val prefix = TextValue("Prefix",",U")

    override val tag: String
        get() = mode.get()

    @EventTarget
    fun onPacket(event: PacketEvent) {
        if ((event.packet)is C01PacketChatMessage) {
            val chatMessage = event.packet
            var message = chatMessage.message
            val prefixMode = mode.get().equals("Prefix",true)
            if (prefixMode && !message.startsWith(prefix.get())) return
            if (prefixMode) message = message.removePrefix(prefix.get())
            val prefixIn = mode.get().equals("Infix",true)
            if (prefixIn && !message.contains(prefix.get())) return
            if (prefixIn){
                val list = message.split(prefix.get())
                if (list.size == 1) return
                val stringBuilder = StringBuilder()
                val message1 = list[0]
                var message2 = ""
                for (m in list){
                    if (m == list[0])continue
                    message2 += m
                }
                for (c in message2.toCharArray()) if (c.toInt() in 33..128) stringBuilder.append(Character.toChars(c.toInt() + 65248)) else stringBuilder.append(c)

                chatMessage.message = message1 + stringBuilder.toString()
                return
            }

            val stringBuilder = StringBuilder()

            for (c in message.toCharArray())
                if (c.toInt() in 33..128)
                    stringBuilder.append(Character.toChars(c.toInt() + 65248)) else stringBuilder.append(c)

            chatMessage.message = stringBuilder.toString()
        }
    }
}